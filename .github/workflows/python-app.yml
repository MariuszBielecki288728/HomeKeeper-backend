# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4.1.7
      - name: Set up Python 3.12
        uses: actions/setup-python@v5.3.0
        with:
          python-version: 3.12
      - name: Install psycopg2 prerequisites
        run: sudo apt-get install libpq-dev
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest poetry
          poetry config virtualenvs.create false
          poetry install
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings.
          # The GitHub editor is 127 chars wide, so you can add --max-line-length=127
          flake8 . --count --exit-zero --max-complexity=10 --statistics
      - name: Run migrations
        run: python manage.py migrate

      - name: Run tests
        run: coverage run manage.py test -v 2

      - name: Generate GraphQL SDL file
        run: python manage.py dumpschema
      - name: Upload schema
        uses: actions/upload-artifact@v4.3.6
        with:
          name: schema
          path: schema.graphql

      - name: Generate coverage xml report
        run: coverage xml
      - name: Upload coverage to codecov.io
        if: ${{ always() }}
        uses: codecov/codecov-action@v4.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
